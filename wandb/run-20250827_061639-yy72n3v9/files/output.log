[2025-08-27 06:16:40] Starting Dual Adapter GRPO Training
Loading checkpoint shards: 100%|██████████| 4/4 [00:03<00:00,  1.10it/s]
[2025-08-27 06:16:45] Loading Data
[2025-08-27 06:16:45] Training samples: 1520, Validation samples: 190
[2025-08-27 06:16:45] === Data Samples ===
[2025-08-27 06:16:45] Sample Keys: ['id', 'input', 'output']
[2025-08-27 06:16:45] Sample Premise: 또한 ‘브람스를 좋아하세요?’는 SBS 단편드라마 ‘17세의 조건’으로 감각적 연출을 선보인 조영민 감독과 섬세한 필력을 자랑한 류보리 작가가 의기투합해 웰메이드 작품 탄생을 예고하고 있다. 박은빈과 김민재의 신선한 조합에, SBS 기대주 감독과 작가가 가세한 SBS 새 월화드라마 ‘브람스를 좋아하세요?’는 8월 31일에 첫 방송된다.
[2025-08-27 06:16:45] Sample Proposition: 박은빈이 출연한 SBS 월화 드라마의 제목에는 작곡가 이름이 들어간다.
[2025-08-27 06:16:45] Sample Label: entailment
[2025-08-27 06:16:45] Sample Reference Output: '브람스를 좋아하세요?'에 독일 작곡가인 브람스의 이름이 들어가 있다. 따라서 가설 문장은 함의에 해당한다.
[2025-08-27 06:16:45] ===================
[2025-08-27 06:16:45] Creating LoRA Adapters
/home/nlplab/anaconda3/envs/soeon/lib/python3.10/site-packages/peft/mapping_func.py:73: UserWarning: You are trying to modify a model with PEFT for a second time. If you want to reload the model with a different config, make sure to call `.unload()` before.
  warnings.warn(
/home/nlplab/anaconda3/envs/soeon/lib/python3.10/site-packages/peft/tuners/tuners_utils.py:190: UserWarning: Already found a `peft_config` attribute in the model. This will lead to having multiple adapters in the model. Make sure to know what you are doing!
  warnings.warn(
Traceback (most recent call last):
  File "/media/nlplab/hdd1/hclt_ss/grpo/main.py", line 119, in <module>
    main()
  File "/media/nlplab/hdd1/hclt_ss/grpo/main.py", line 75, in main
    adapter_a, adapter_b = create_dual_adapters(base_model, lora_config)
  File "/media/nlplab/hdd1/hclt_ss/grpo/model.py", line 35, in create_dual_adapters
    adapter_b = get_peft_model(copy.deepcopy(base_model), lora_config)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 172, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 271, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 172, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 271, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 172, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 271, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 172, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 271, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 172, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 271, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 172, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 271, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 172, in deepcopy
    y = _reconstruct(x, memo, *rv)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 271, in _reconstruct
    state = deepcopy(state, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 146, in deepcopy
    y = copier(x, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 231, in _deepcopy_dict
    y[deepcopy(key, memo)] = deepcopy(value, memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/copy.py", line 153, in deepcopy
    y = copier(memo)
  File "/home/nlplab/anaconda3/envs/soeon/lib/python3.10/site-packages/torch/nn/parameter.py", line 68, in __deepcopy__
    self.data.clone(memory_format=torch.preserve_format), self.requires_grad
torch.OutOfMemoryError: CUDA out of memory. Tried to allocate 32.00 MiB. GPU 1 has a total capacity of 23.69 GiB of which 32.81 MiB is free. Including non-PyTorch memory, this process has 23.65 GiB memory in use. Of the allocated memory 23.22 GiB is allocated by PyTorch, and 151.34 MiB is reserved by PyTorch but unallocated. If reserved but unallocated memory is large try setting PYTORCH_CUDA_ALLOC_CONF=expandable_segments:True to avoid fragmentation.  See documentation for Memory Management  (https://pytorch.org/docs/stable/notes/cuda.html#environment-variables)
